<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: data science | DataJujitsu]]></title>
  <link href="http://DASpringate.github.io/blog/categories/data-science/atom.xml" rel="self"/>
  <link href="http://DASpringate.github.io/"/>
  <updated>2014-08-04T16:01:36+01:00</updated>
  <id>http://DASpringate.github.io/</id>
  <author>
    <name><![CDATA[David A Springate]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Book Review: Haskell Data Analysis Cookbook]]></title>
    <link href="http://DASpringate.github.io/blog/2014/08/04/book-review-haskell-data-analysis-cookbook/"/>
    <updated>2014-08-04T13:45:29+01:00</updated>
    <id>http://DASpringate.github.io/blog/2014/08/04/book-review-haskell-data-analysis-cookbook</id>
    <content type="html"><![CDATA[<p><a href="http://www.packtpub.com/haskell-data-analysis-cookbook/book">Haskell Data Analysis Cookbook by Nishant Shukla</a></p>

<p>[Full disclosure &ndash; I was given a free review copy of the book from the publisher. This review refers to the ebook version]</p>

<p>Data scientists are spoiled for choice with languages for statistics and data analysis these days.  There is the tried and battle-tested but sometimes plodding workhorse &#40;R), the popular general purpose language with a bunch of fairly new tools (Python), the expensive, closed-source old guard (SAS, Matlab, Stata), C++ for lightning fast calculations but slooow development time, a modern day Lisp with great Java interaction (Clojure) and a new Lisp/Python/R hybrid that is looking to steal Matlab&rsquo;s crown for numerical computation (Julia).  This book sees the purely functional, strongly typed language Haskell throw its hat in the data science ring.</p>

<p>This is a great book for data scientists wanting to leverage the power of functional programming in data analysis applications.  There are chapters on data cleaning, text scraping, hashing, tree traversal, social network analysis, basic stats and machine learning algorithms, mapReduce and visualisation.  It is also good for more general purpose beginner and intermediate level Haskell hackers, since it covers a lot of areas that can be essential in day-to-day programming such as reading and writing data from and to a variety of sources (including databases and the web), text processing, parallel programming and dealing with real time data.  Often in books on haskell (as in many books on Lisp) much space is given to show off the cool FP aspects of the language but you are left struggling with doing the practical IO tasks that are no-brainers in more traditional languages.</p>

<p>The book covers a wide range of subjects, but it provides only a primer for most of them to get you started.  In most cases this is enough, but there are a couple of areas I would have liked to have seen greater depth, for example in the statistics section, a more comprehensive introduction to linear modelling and regression would have been more convincing to R and Python users as to the advantages of switching to Haskell.  I would also have liked to have seen a treatment of random number generation and simulation; the purely functional nature of Haskell seems to make it difficult to generate simple random sequences because you need to set the seed for each run in order to maintain referential transparency (i.e. a function in Haskell generally needs to return the same value for the same input every time).</p>

<p>The examples are well written and well explained and there is a Github page with the source code from all the chapters if you don&rsquo;t want to type out every one from scratch.  Another nice touch is the list of list of data sources and APIs for doing your own analyses with.  I&rsquo;m sure you could find them with a little Googling but it was good to have them all in one place and there were several I was not aware of.</p>

<p>It must be said that this is not an &lsquo;introduction to Haskell&rsquo; book.  There is plenty of assumed knowledge and the syntax is hardly discussed at all.  However, I would highly recommend anyone starting off with Haskell to get this book alongside an introductory book such as the fantastic &ldquo;Learn you a Haskell for Great Good&rdquo; to get to grips with the mind-bending complexity of the pure FP paradigm alongside the practical real-world applications.</p>

<p>The quality of the book aside, after reading the book I am yet to be convinced that Haskell is a great language for data science.  The static typing and functional purity would be good for building large scale data-centric systems requiring rigorous validation but in my experience, most analytics coding involves lots of rapid prototyping, on-the-fly testing and hacking away at the REPL. It is this style of programming that Python, R and Lisp-based languages excel at &ndash; incrementally growing your codebase to deal with swiftly changing data and conditions.  Haskell seems slightly too rigid to be a comfortable fit; having to think too much about types early on slows down early development (although it could well pay off later on) and the strictness of its functional programming can feel pretty unforgiving. Also the ghci interactive environment just doesn&rsquo;t feel as natural as a Lisp or R REPL. Finally, Haskell seems to be missing other important features such as an equivalent to R&rsquo;s data.frame (which is available in Python, Clojure and Julia) and good interoperability with other systems (such as Weka, R and Hadoop).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Book review: Social Media Mining with R]]></title>
    <link href="http://DASpringate.github.io/blog/2014/06/20/review-social-media-mining-with-r/"/>
    <updated>2014-06-20T21:40:37+01:00</updated>
    <id>http://DASpringate.github.io/blog/2014/06/20/review-social-media-mining-with-r</id>
    <content type="html"><![CDATA[<p><a href="http://www.packtpub.com/social-media-mining-with-r/book">Social Media Mining with R by Nathan Danneman and Richard Heimann</a></p>

<p>[Full disclosure &ndash; I was given a free review copy of the book from the publisher. This review refers to the ebook version]</p>

<p>I worry when a book proposes that it will appeal to everyone.  The trouble is that it could well end up appealing to no-one. The introduction to this new book on social media mining in R says that it will be suitable for skilled programmers with little social science background, people who lack any sort of programming background, people wanting an introduction to social data mining and advanced social science researchers. That doesn&rsquo;t leave many people out!</p>

<p>It turns out that this book doesn&rsquo;t really cover much social media mining.  It does cover basic sentiment analysis and text-mining with some references to twitter data but other social media platforms are barely mentioned and there is no discussion of any of the other social media APIs (e.g. Facebook, Linkedin and Github).  The authors also miss an opportunity to discuss other analysis techniques such as social network analysis and network graphs, which twitter (and other social media) data would be ideal for.</p>

<p>In the first third of the book, much mention is made of big data and how researchers are going to have to prepare for it, but the actual content for dealing with big data (or at least data that would struggle to fit in the RAM of an average laptop) amounts to little more than &ldquo;check that you have enough memory to read in your data and read the manual for the <code>read.table</code> function&rdquo;. R has a reputation for not coping well with large datasets but there are some packages that really assist with this (like <code>fread</code>, <code>data.table</code>, <code>sqldf</code> and <code>dplyr</code>) that could easily have been discussed, along with any number of tips for speeding up I/O using base R functions.</p>

<p>The introductory and background material and theory is interesting and provides a good high level introduction to sentiment analysis, though it still feels somewhat rushed (for example, why completely leave out semi-supervised approaches?  It would have been nice to have at least a page or two describing what they are and why they might be useful) and there is little detail on the assumptions of the different models. The introduction would make a good springboard for deeper research however, and the further reading and bibliography sections are very good.</p>

<p>I like there to be code on nearly every page of a programming book but this one is very light on R code examples. There is a chapter on setting up R and installing packages (This is not going to be anyone&rsquo;s first R book so this chapter feels like a waste, particularly in a book that only clocks in at 120 pages), another covering getting tweets via the <code>twitteR</code> package (but not the streaming API for collecting tweets over a prolonged period of time or any way of storing tweets in a database) and then nothing until two thirds of the way through where there are three short case studies of different methods of sentiment analysis.  It also seems strange to separate out the theory in the earlier chapters and the practical applications later on.</p>

<p>The case studies are mostly decent, covering lexicon-based, naive Bayes and the authors' own unsupervised <em>Item Response Theory</em> sentiment analysis methods.  It seems strange to me in a book on social media mining that the first example doesn&rsquo;t even use social media data, but US government reports which even the authors admit bears little resemblance to twitter data. Some of the code is poorly explained (or not explained at all), idiosyncratic (there may be reasons for using <code>scan</code> to read in a text file, but what are they?) and makes use of out of date packages (Hadley Wickham shipped <code>reshape2</code> back in 2012, why still use <code>reshape</code>?).  The authors miss several opportunities to flesh out the book: One minute they say how important data cleaning is and how useful regular expressions are and then they just point you in the direction of a website teaching regular expressions.  The same is true for the plotting package ggplot2 (Is Wilkinson&rsquo;s <em>The Grammar of Graphics</em> really an appropriate introductory text for this package?) and the <code>rWeka</code> machine learning package.  A lot of the information is good (in particular the description of the <code>tm</code> text-mining package functions) but it all feels a little lightweight, like a collection of blog posts.  The case study analyses were interesting, though choosing such obviously polarised subjects as abortion and Obamacare resulted in much neater, cleaner results than would have been found had subjects been used where opinions are less black-and-white.</p>

<p>Sentiment analysis seems to be everywhere at the moment.  It reminds me of word clouds a few years ago:  Everyone starting out in data science was using them but they soon became a little embarrassing as they became more ubiquitous and were even famously described as the &ldquo;<a href="http://www.zeldman.com/daily/0405d.shtml">mullets of the internet</a>&rdquo;. Make of it what you will that word clouds are used several times as an analysis method in this book.</p>

<p>Users who have maybe done a Coursera data science course or two and want to try their hand at some simple analyses to boost their portfolio will probably find this book useful but more serious users are likely to be left disappointed.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[It's not just for stats: Web mining in R]]></title>
    <link href="http://DASpringate.github.io/blog/2014/06/06/web-mining-in-r/"/>
    <updated>2014-06-06T12:23:23+01:00</updated>
    <id>http://DASpringate.github.io/blog/2014/06/06/web-mining-in-r</id>
    <content type="html"><![CDATA[<p>These are the slides from a talk I gave to the <a href="http://www.rmanchester.org">Manchester R user group</a> on the 6th of May, 2014.</p>

<p>I discussed what web mining(or web scraping) is and the advantages of using R to do it.  Then I provided a toolkit of R functions for Web mining before giving two examples of using web mining for practical uses:</p>

<ol>
<li>Downloading multiple files from a website</li>
<li>A mash-up of data from a number of sources to find out the best places to apply for a new job in academia!</li>
</ol>

]]></content>
  </entry>
  
</feed>
